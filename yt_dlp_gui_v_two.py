# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'yt_dlp_gui_v_two.ui'
#
# Created by: PyQt5 UI code generator 5.15.7
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.setEnabled(True)
        MainWindow.resize(874, 671)
        MainWindow.setMouseTracking(True)
        MainWindow.setAcceptDrops(False)
        MainWindow.setStyleSheet("background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:0 rgba(0, 0, 0, 255), stop:1 rgba(255, 255, 255, 255));\n"
"color: rgb(255, 255, 255);")
        MainWindow.setTabShape(QtWidgets.QTabWidget.Rounded)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.gridLayout = QtWidgets.QGridLayout(self.centralwidget)
        self.gridLayout.setObjectName("gridLayout")
        self.status_label_verticalScrollBar = QtWidgets.QScrollBar(self.centralwidget)
        self.status_label_verticalScrollBar.setMouseTracking(True)
        self.status_label_verticalScrollBar.setStyleSheet("background-color: rgb(0, 0, 0);")
        self.status_label_verticalScrollBar.setOrientation(QtCore.Qt.Vertical)
        self.status_label_verticalScrollBar.setObjectName("status_label_verticalScrollBar")
        self.gridLayout.addWidget(self.status_label_verticalScrollBar, 8, 2, 1, 1)
        self.audio_only_checkbox = QtWidgets.QCheckBox(self.centralwidget)
        font = QtGui.QFont()
        font.setUnderline(True)
        self.audio_only_checkbox.setFont(font)
        self.audio_only_checkbox.setStyleSheet("background-color: transparent;\n"
"color: rgb(0, 0, 0);")
        self.audio_only_checkbox.setObjectName("audio_only_checkbox")
        self.gridLayout.addWidget(self.audio_only_checkbox, 5, 1, 1, 1)
        self.audio_quality_label = QtWidgets.QLabel(self.centralwidget)
        self.audio_quality_label.setStyleSheet("background-color: transparent;\n"
"color: rgb(0, 0, 0);")
        self.audio_quality_label.setObjectName("audio_quality_label")
        self.gridLayout.addWidget(self.audio_quality_label, 6, 1, 1, 1)
        self.progressBar = QtWidgets.QProgressBar(self.centralwidget)
        self.progressBar.setStyleSheet("color: rgb(0, 0, 0);")
        self.progressBar.setProperty("value", 0)
        self.progressBar.setObjectName("progressBar")
        self.gridLayout.addWidget(self.progressBar, 10, 1, 1, 1)
        self.filetype_label = QtWidgets.QLabel(self.centralwidget)
        self.filetype_label.setStyleSheet("background-color: transparent;\n"
"color: rgb(0, 0, 0);")
        self.filetype_label.setObjectName("filetype_label")
        self.gridLayout.addWidget(self.filetype_label, 3, 1, 1, 1)
        self.progress_label = QtWidgets.QLabel(self.centralwidget)
        self.progress_label.setStyleSheet("background-color: transparent;\n"
"color: rgb(0, 0, 0);\n"
"font: 12pt \"MS Shell Dlg 2\";")
        self.progress_label.setText("")
        self.progress_label.setObjectName("progress_label")
        self.gridLayout.addWidget(self.progress_label, 9, 1, 1, 1)
        self.audio_quality_slider = QtWidgets.QSlider(self.centralwidget)
        self.audio_quality_slider.setEnabled(False)
        self.audio_quality_slider.setStyleSheet("background-color: transparent")
        self.audio_quality_slider.setMaximum(10)
        self.audio_quality_slider.setProperty("value", 5)
        self.audio_quality_slider.setOrientation(QtCore.Qt.Horizontal)
        self.audio_quality_slider.setObjectName("audio_quality_slider")
        self.gridLayout.addWidget(self.audio_quality_slider, 7, 1, 1, 1)
        self.url_input = QtWidgets.QPlainTextEdit(self.centralwidget)
        self.url_input.setStyleSheet("background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0, stop:0 rgba(156, 156, 156, 255), stop:0.778409 rgba(255, 255, 255, 255));\n"
"border-color: rgb(0, 0, 0);\n"
"color: rgb(0, 0, 0);")
        self.url_input.setObjectName("url_input")
        self.gridLayout.addWidget(self.url_input, 1, 0, 6, 1)
        self.input_url_label = QtWidgets.QLabel(self.centralwidget)
        font = QtGui.QFont()
        font.setPointSize(14)
        self.input_url_label.setFont(font)
        self.input_url_label.setStyleSheet("background-color: transparent;\n"
"color: rgb(255, 255, 255);")
        self.input_url_label.setObjectName("input_url_label")
        self.gridLayout.addWidget(self.input_url_label, 0, 0, 1, 1)
        self.folder_path_input = QtWidgets.QLabel(self.centralwidget)
        self.folder_path_input.setStyleSheet("background-color: transparent;\n"
"color: rgb(0, 0, 0);")
        self.folder_path_input.setObjectName("folder_path_input")
        self.gridLayout.addWidget(self.folder_path_input, 1, 1, 1, 1)
        self.browse_folder_button = QtWidgets.QPushButton(self.centralwidget)
        self.browse_folder_button.setStyleSheet("background-color: rgb(190, 190,190);\n"
"color: rgb(0, 0, 0);")
        self.browse_folder_button.setObjectName("browse_folder_button")
        self.gridLayout.addWidget(self.browse_folder_button, 2, 1, 1, 1)
        self.filetype_dropdown = QtWidgets.QComboBox(self.centralwidget)
        self.filetype_dropdown.setAcceptDrops(True)
        self.filetype_dropdown.setStyleSheet("background-color: rgba(0, 0, 0, 0.4);\n"
"border-color: rgb(0, 0, 0);\n"
"opacity: 0;\n"
"border-top-color: rgb(0, 0, 0);\n"
"border-right-color: rgb(0, 0, 0);")
        self.filetype_dropdown.setObjectName("filetype_dropdown")
        self.filetype_dropdown.addItem("")
        self.filetype_dropdown.addItem("")
        self.filetype_dropdown.addItem("")
        self.filetype_dropdown.addItem("")
        self.filetype_dropdown.addItem("")
        self.filetype_dropdown.addItem("")
        self.gridLayout.addWidget(self.filetype_dropdown, 4, 1, 1, 1)
        self.status_label = QtWidgets.QTextBrowser(self.centralwidget)
        self.status_label.setEnabled(True)
        font = QtGui.QFont()
        font.setFamily("MS Shell Dlg 2")
        font.setPointSize(8)
        font.setBold(False)
        font.setItalic(False)
        font.setWeight(50)
        self.status_label.setFont(font)
        self.status_label.setStyleSheet("background-color: transparent;\n"
"color: rgb(0, 0, 0);")
        self.status_label.setObjectName("status_label")
        self.gridLayout.addWidget(self.status_label, 8, 1, 1, 1)
        self.download_button = QtWidgets.QPushButton(self.centralwidget)
        self.download_button.setStyleSheet("font: 15pt \"Comic Sans MS\";\n"
"background-color: qlineargradient(spread:pad, x1:1, y1:0, x2:0, y2:0, stop:0 rgba(0, 0, 0, 255), stop:1 rgba(255, 255, 255, 255));")
        self.download_button.setObjectName("download_button")
        self.gridLayout.addWidget(self.download_button, 11, 1, 1, 1)
        self.options_box = QtWidgets.QTabWidget(self.centralwidget)
        self.options_box.setEnabled(True)
        font = QtGui.QFont()
        font.setBold(False)
        font.setWeight(50)
        self.options_box.setFont(font)
        self.options_box.setMouseTracking(True)
        self.options_box.setAutoFillBackground(False)
        self.options_box.setStyleSheet("background-color: qlineargradient(spread:pad, x1:1, y1:0, x2:0, y2:0, stop:0 rgba(0, 0, 0, 255), stop:1 rgba(255, 255, 255, 255));\n"
"color: rgb(0, 0, 0);")
        self.options_box.setObjectName("options_box")
        self.general_tab = QtWidgets.QWidget()
        self.general_tab.setObjectName("general_tab")
        self.update_checkBox = QtWidgets.QCheckBox(self.general_tab)
        self.update_checkBox.setGeometry(QtCore.QRect(10, 190, 70, 17))
        self.update_checkBox.setStyleSheet("background-color: transparent;")
        self.update_checkBox.setObjectName("update_checkBox")
        self.stop_on_error_checkBox = QtWidgets.QCheckBox(self.general_tab)
        self.stop_on_error_checkBox.setGeometry(QtCore.QRect(10, 50, 131, 17))
        self.stop_on_error_checkBox.setStyleSheet("background-color: transparent;")
        self.stop_on_error_checkBox.setObjectName("stop_on_error_checkBox")
        self.force_generic_extractor_checkBox = QtWidgets.QCheckBox(self.general_tab)
        self.force_generic_extractor_checkBox.setGeometry(QtCore.QRect(10, 70, 141, 17))
        self.force_generic_extractor_checkBox.setStyleSheet("background-color: transparent;")
        self.force_generic_extractor_checkBox.setObjectName("force_generic_extractor_checkBox")
        self.ignore_config_except_default_checkBox = QtWidgets.QCheckBox(self.general_tab)
        self.ignore_config_except_default_checkBox.setGeometry(QtCore.QRect(10, 30, 191, 17))
        self.ignore_config_except_default_checkBox.setStyleSheet("background-color: transparent;")
        self.ignore_config_except_default_checkBox.setObjectName("ignore_config_except_default_checkBox")
        self.ignore_all_config_files_checkBox = QtWidgets.QCheckBox(self.general_tab)
        self.ignore_all_config_files_checkBox.setGeometry(QtCore.QRect(10, 10, 131, 17))
        self.ignore_all_config_files_checkBox.setStyleSheet("background-color: transparent;")
        self.ignore_all_config_files_checkBox.setChecked(True)
        self.ignore_all_config_files_checkBox.setObjectName("ignore_all_config_files_checkBox")
        self.list_playlist_contents_only_checkBox = QtWidgets.QCheckBox(self.general_tab)
        self.list_playlist_contents_only_checkBox.setGeometry(QtCore.QRect(10, 90, 191, 17))
        self.list_playlist_contents_only_checkBox.setStyleSheet("background-color: transparent;")
        self.list_playlist_contents_only_checkBox.setObjectName("list_playlist_contents_only_checkBox")
        self.livestreams_from_start_checkBox = QtWidgets.QCheckBox(self.general_tab)
        self.livestreams_from_start_checkBox.setGeometry(QtCore.QRect(10, 110, 181, 17))
        self.livestreams_from_start_checkBox.setStyleSheet("background-color: transparent;")
        self.livestreams_from_start_checkBox.setObjectName("livestreams_from_start_checkBox")
        self.wait_for_streams_checkBox = QtWidgets.QCheckBox(self.general_tab)
        self.wait_for_streams_checkBox.setGeometry(QtCore.QRect(10, 130, 161, 17))
        self.wait_for_streams_checkBox.setStyleSheet("background-color: transparent;")
        self.wait_for_streams_checkBox.setObjectName("wait_for_streams_checkBox")
        self.mark_video_watched_checkBox = QtWidgets.QCheckBox(self.general_tab)
        self.mark_video_watched_checkBox.setGeometry(QtCore.QRect(10, 150, 121, 17))
        self.mark_video_watched_checkBox.setStyleSheet("background-color: transparent;")
        self.mark_video_watched_checkBox.setObjectName("mark_video_watched_checkBox")
        self.color_codes_checkBox = QtWidgets.QCheckBox(self.general_tab)
        self.color_codes_checkBox.setGeometry(QtCore.QRect(10, 170, 151, 17))
        self.color_codes_checkBox.setStyleSheet("background-color: transparent;")
        self.color_codes_checkBox.setObjectName("color_codes_checkBox")
        self.options_box.addTab(self.general_tab, "")
        self.net_geo_tab = QtWidgets.QWidget()
        self.net_geo_tab.setObjectName("net_geo_tab")
        self.proxy_url_input = QtWidgets.QLineEdit(self.net_geo_tab)
        self.proxy_url_input.setGeometry(QtCore.QRect(110, 10, 291, 20))
        self.proxy_url_input.setStyleSheet("background-color: rgb(220, 220, 220);")
        self.proxy_url_input.setText("")
        self.proxy_url_input.setObjectName("proxy_url_input")
        self.timeout_seconds_input = QtWidgets.QLineEdit(self.net_geo_tab)
        self.timeout_seconds_input.setGeometry(QtCore.QRect(110, 40, 291, 21))
        self.timeout_seconds_input.setStyleSheet("background-color: rgb(220, 220, 220);")
        self.timeout_seconds_input.setObjectName("timeout_seconds_input")
        self.timeout_seconds_label = QtWidgets.QLabel(self.net_geo_tab)
        self.timeout_seconds_label.setGeometry(QtCore.QRect(10, 40, 91, 16))
        self.timeout_seconds_label.setStyleSheet("background-color: transparent;")
        self.timeout_seconds_label.setObjectName("timeout_seconds_label")
        self.ip_label = QtWidgets.QLabel(self.net_geo_tab)
        self.ip_label.setGeometry(QtCore.QRect(10, 70, 47, 13))
        self.ip_label.setStyleSheet("background-color: transparent;")
        self.ip_label.setObjectName("ip_label")
        self.ip_input = QtWidgets.QLineEdit(self.net_geo_tab)
        self.ip_input.setGeometry(QtCore.QRect(110, 70, 291, 20))
        self.ip_input.setStyleSheet("background-color: rgb(220, 220, 220);")
        self.ip_input.setObjectName("ip_input")
        self.force_ipv4_checkBox = QtWidgets.QCheckBox(self.net_geo_tab)
        self.force_ipv4_checkBox.setGeometry(QtCore.QRect(10, 100, 91, 21))
        self.force_ipv4_checkBox.setStyleSheet("background-color: transparent;")
        self.force_ipv4_checkBox.setObjectName("force_ipv4_checkBox")
        self.force_ipv6_checkBox = QtWidgets.QCheckBox(self.net_geo_tab)
        self.force_ipv6_checkBox.setGeometry(QtCore.QRect(10, 120, 70, 17))
        self.force_ipv6_checkBox.setStyleSheet("background-color: transparent;")
        self.force_ipv6_checkBox.setObjectName("force_ipv6_checkBox")
        self.geo_veri_proxy_url_input = QtWidgets.QLineEdit(self.net_geo_tab)
        self.geo_veri_proxy_url_input.setGeometry(QtCore.QRect(140, 150, 261, 20))
        self.geo_veri_proxy_url_input.setStyleSheet("background-color: rgb(220, 220, 220);")
        self.geo_veri_proxy_url_input.setObjectName("geo_veri_proxy_url_input")
        self.geo_veri_proxy_url_label = QtWidgets.QLabel(self.net_geo_tab)
        self.geo_veri_proxy_url_label.setGeometry(QtCore.QRect(10, 150, 131, 16))
        self.geo_veri_proxy_url_label.setStyleSheet("background-color: transparent;")
        self.geo_veri_proxy_url_label.setObjectName("geo_veri_proxy_url_label")
        self.geo_bypass_checkBox = QtWidgets.QCheckBox(self.net_geo_tab)
        self.geo_bypass_checkBox.setGeometry(QtCore.QRect(10, 180, 81, 17))
        self.geo_bypass_checkBox.setStyleSheet("background-color: transparent;")
        self.geo_bypass_checkBox.setChecked(True)
        self.geo_bypass_checkBox.setObjectName("geo_bypass_checkBox")
        self.geo_bypass_country_code_input = QtWidgets.QLineEdit(self.net_geo_tab)
        self.geo_bypass_country_code_input.setGeometry(QtCore.QRect(140, 210, 261, 20))
        self.geo_bypass_country_code_input.setStyleSheet("background-color: rgb(220, 220, 220);")
        self.geo_bypass_country_code_input.setObjectName("geo_bypass_country_code_input")
        self.geo_bypass_country_code_label = QtWidgets.QLabel(self.net_geo_tab)
        self.geo_bypass_country_code_label.setGeometry(QtCore.QRect(10, 210, 131, 16))
        self.geo_bypass_country_code_label.setStyleSheet("background-color: transparent;")
        self.geo_bypass_country_code_label.setObjectName("geo_bypass_country_code_label")
        self.geo_bypass_ip_block_input = QtWidgets.QLineEdit(self.net_geo_tab)
        self.geo_bypass_ip_block_input.setGeometry(QtCore.QRect(140, 250, 261, 20))
        self.geo_bypass_ip_block_input.setStyleSheet("background-color: rgb(220, 220, 220);")
        self.geo_bypass_ip_block_input.setObjectName("geo_bypass_ip_block_input")
        self.geo_bypass_ip_block_label = QtWidgets.QLabel(self.net_geo_tab)
        self.geo_bypass_ip_block_label.setGeometry(QtCore.QRect(10, 250, 121, 16))
        self.geo_bypass_ip_block_label.setStyleSheet("background-color: transparent;")
        self.geo_bypass_ip_block_label.setObjectName("geo_bypass_ip_block_label")
        self.proxy_label = QtWidgets.QLabel(self.net_geo_tab)
        self.proxy_label.setGeometry(QtCore.QRect(10, 10, 91, 16))
        self.proxy_label.setStyleSheet("background-color: transparent;")
        self.proxy_label.setObjectName("proxy_label")
        self.options_box.addTab(self.net_geo_tab, "")
        self.video_tab = QtWidgets.QWidget()
        self.video_tab.setObjectName("video_tab")
        self.playlist_items_input = QtWidgets.QLineEdit(self.video_tab)
        self.playlist_items_input.setGeometry(QtCore.QRect(110, 10, 291, 20))
        self.playlist_items_input.setStyleSheet("background-color: rgb(220, 220, 220);")
        self.playlist_items_input.setObjectName("playlist_items_input")
        self.minimum_filesize_input = QtWidgets.QLineEdit(self.video_tab)
        self.minimum_filesize_input.setGeometry(QtCore.QRect(110, 40, 291, 20))
        self.minimum_filesize_input.setStyleSheet("background-color: rgb(220, 220, 220);")
        self.minimum_filesize_input.setObjectName("minimum_filesize_input")
        self.maximum_filesize_input = QtWidgets.QLineEdit(self.video_tab)
        self.maximum_filesize_input.setGeometry(QtCore.QRect(110, 70, 291, 20))
        self.maximum_filesize_input.setStyleSheet("background-color: rgb(220, 220, 220);")
        self.maximum_filesize_input.setObjectName("maximum_filesize_input")
        self.specific_date_input = QtWidgets.QLineEdit(self.video_tab)
        self.specific_date_input.setGeometry(QtCore.QRect(110, 100, 291, 20))
        self.specific_date_input.setStyleSheet("background-color: rgb(220, 220, 220);")
        self.specific_date_input.setObjectName("specific_date_input")
        self.before_date_input = QtWidgets.QLineEdit(self.video_tab)
        self.before_date_input.setGeometry(QtCore.QRect(110, 130, 291, 20))
        self.before_date_input.setStyleSheet("background-color: rgb(220, 220, 220);")
        self.before_date_input.setObjectName("before_date_input")
        self.after_date_input = QtWidgets.QLineEdit(self.video_tab)
        self.after_date_input.setGeometry(QtCore.QRect(110, 160, 291, 20))
        self.after_date_input.setStyleSheet("background-color: rgb(220, 220, 220);")
        self.after_date_input.setObjectName("after_date_input")
        self.playlist_items_label = QtWidgets.QLabel(self.video_tab)
        self.playlist_items_label.setGeometry(QtCore.QRect(10, 10, 71, 16))
        self.playlist_items_label.setStyleSheet("background-color: transparent;")
        self.playlist_items_label.setObjectName("playlist_items_label")
        self.minimum_filesize_label = QtWidgets.QLabel(self.video_tab)
        self.minimum_filesize_label.setGeometry(QtCore.QRect(10, 40, 91, 16))
        self.minimum_filesize_label.setStyleSheet("background-color: transparent;\n"
"")
        self.minimum_filesize_label.setObjectName("minimum_filesize_label")
        self.maximum_filesize_label = QtWidgets.QLabel(self.video_tab)
        self.maximum_filesize_label.setGeometry(QtCore.QRect(10, 70, 91, 16))
        self.maximum_filesize_label.setStyleSheet("background-color: transparent;")
        self.maximum_filesize_label.setObjectName("maximum_filesize_label")
        self.specific_date_label = QtWidgets.QLabel(self.video_tab)
        self.specific_date_label.setGeometry(QtCore.QRect(10, 100, 71, 16))
        self.specific_date_label.setStyleSheet("background-color: transparent;")
        self.specific_date_label.setObjectName("specific_date_label")
        self.before_date_label = QtWidgets.QLabel(self.video_tab)
        self.before_date_label.setGeometry(QtCore.QRect(10, 130, 71, 16))
        self.before_date_label.setStyleSheet("background-color: transparent;")
        self.before_date_label.setObjectName("before_date_label")
        self.after_date_label = QtWidgets.QLabel(self.video_tab)
        self.after_date_label.setGeometry(QtCore.QRect(10, 160, 71, 16))
        self.after_date_label.setStyleSheet("background-color: transparent;")
        self.after_date_label.setObjectName("after_date_label")
        self.filters_label = QtWidgets.QLabel(self.video_tab)
        self.filters_label.setGeometry(QtCore.QRect(10, 190, 71, 16))
        self.filters_label.setStyleSheet("background-color: transparent;")
        self.filters_label.setObjectName("filters_label")
        self.filters_input = QtWidgets.QLineEdit(self.video_tab)
        self.filters_input.setGeometry(QtCore.QRect(110, 190, 291, 20))
        self.filters_input.setStyleSheet("background-color: rgb(220, 220, 220);")
        self.filters_input.setObjectName("filters_input")
        self.download_playlist_checkBox = QtWidgets.QCheckBox(self.video_tab)
        self.download_playlist_checkBox.setGeometry(QtCore.QRect(10, 310, 101, 17))
        self.download_playlist_checkBox.setStyleSheet("background-color: transparent;")
        self.download_playlist_checkBox.setObjectName("download_playlist_checkBox")
        self.age_limit_input = QtWidgets.QLineEdit(self.video_tab)
        self.age_limit_input.setGeometry(QtCore.QRect(110, 220, 291, 20))
        self.age_limit_input.setStyleSheet("background-color: rgb(220, 220, 220);")
        self.age_limit_input.setObjectName("age_limit_input")
        self.age_limit_label = QtWidgets.QLabel(self.video_tab)
        self.age_limit_label.setGeometry(QtCore.QRect(10, 220, 71, 16))
        self.age_limit_label.setStyleSheet("background-color: transparent;")
        self.age_limit_label.setObjectName("age_limit_label")
        self.options_box.addTab(self.video_tab, "")
        self.download_tab = QtWidgets.QWidget()
        self.download_tab.setObjectName("download_tab")
        self.max_download_rate_input = QtWidgets.QLineEdit(self.download_tab)
        self.max_download_rate_input.setGeometry(QtCore.QRect(110, 10, 281, 20))
        self.max_download_rate_input.setStyleSheet("background-color: rgb(220, 220, 220);")
        self.max_download_rate_input.setObjectName("max_download_rate_input")
        self.max_download_rate_label = QtWidgets.QLabel(self.download_tab)
        self.max_download_rate_label.setGeometry(QtCore.QRect(10, 10, 101, 16))
        self.max_download_rate_label.setStyleSheet("background-color: transparent;")
        self.max_download_rate_label.setObjectName("max_download_rate_label")
        self.retries_label = QtWidgets.QLabel(self.download_tab)
        self.retries_label.setGeometry(QtCore.QRect(10, 40, 101, 16))
        self.retries_label.setStyleSheet("background-color: transparent;")
        self.retries_label.setObjectName("retries_label")
        self.retries_input = QtWidgets.QLineEdit(self.download_tab)
        self.retries_input.setGeometry(QtCore.QRect(110, 40, 281, 20))
        self.retries_input.setStyleSheet("background-color: rgb(220, 220, 220);")
        self.retries_input.setText("")
        self.retries_input.setObjectName("retries_input")
        self.file_access_retries_label = QtWidgets.QLabel(self.download_tab)
        self.file_access_retries_label.setGeometry(QtCore.QRect(10, 70, 101, 16))
        self.file_access_retries_label.setStyleSheet("background-color: transparent;")
        self.file_access_retries_label.setObjectName("file_access_retries_label")
        self.file_access_retries_input = QtWidgets.QLineEdit(self.download_tab)
        self.file_access_retries_input.setGeometry(QtCore.QRect(110, 70, 281, 20))
        self.file_access_retries_input.setStyleSheet("background-color: rgb(220, 220, 220);")
        self.file_access_retries_input.setObjectName("file_access_retries_input")
        self.concurrent_frags_input = QtWidgets.QLineEdit(self.download_tab)
        self.concurrent_frags_input.setGeometry(QtCore.QRect(110, 160, 281, 20))
        self.concurrent_frags_input.setStyleSheet("background-color: rgb(220, 220, 220);")
        self.concurrent_frags_input.setObjectName("concurrent_frags_input")
        self.retry_sleep_label = QtWidgets.QLabel(self.download_tab)
        self.retry_sleep_label.setGeometry(QtCore.QRect(10, 130, 101, 16))
        self.retry_sleep_label.setStyleSheet("background-color: transparent;")
        self.retry_sleep_label.setObjectName("retry_sleep_label")
        self.fragment_retries_label = QtWidgets.QLabel(self.download_tab)
        self.fragment_retries_label.setGeometry(QtCore.QRect(10, 100, 101, 16))
        self.fragment_retries_label.setStyleSheet("background-color: transparent;")
        self.fragment_retries_label.setObjectName("fragment_retries_label")
        self.concurrent_frags_label = QtWidgets.QLabel(self.download_tab)
        self.concurrent_frags_label.setGeometry(QtCore.QRect(10, 160, 101, 16))
        self.concurrent_frags_label.setStyleSheet("background-color: transparent;")
        self.concurrent_frags_label.setObjectName("concurrent_frags_label")
        self.retry_sleep_input = QtWidgets.QLineEdit(self.download_tab)
        self.retry_sleep_input.setGeometry(QtCore.QRect(110, 130, 281, 20))
        self.retry_sleep_input.setStyleSheet("background-color: rgb(220, 220, 220);")
        self.retry_sleep_input.setObjectName("retry_sleep_input")
        self.fragment_retries_input = QtWidgets.QLineEdit(self.download_tab)
        self.fragment_retries_input.setGeometry(QtCore.QRect(110, 100, 281, 20))
        self.fragment_retries_input.setStyleSheet("background-color: rgb(220, 220, 220);")
        self.fragment_retries_input.setObjectName("fragment_retries_input")
        self.skip_unavailable_fragments_checkBox = QtWidgets.QCheckBox(self.download_tab)
        self.skip_unavailable_fragments_checkBox.setGeometry(QtCore.QRect(10, 270, 151, 17))
        self.skip_unavailable_fragments_checkBox.setStyleSheet("background-color: transparent;")
        self.skip_unavailable_fragments_checkBox.setObjectName("skip_unavailable_fragments_checkBox")
        self.keep_fragments_checkBox = QtWidgets.QCheckBox(self.download_tab)
        self.keep_fragments_checkBox.setGeometry(QtCore.QRect(10, 290, 151, 17))
        self.keep_fragments_checkBox.setStyleSheet("background-color: transparent;")
        self.keep_fragments_checkBox.setObjectName("keep_fragments_checkBox")
        self.no_resize_buffer_checkBox = QtWidgets.QCheckBox(self.download_tab)
        self.no_resize_buffer_checkBox.setGeometry(QtCore.QRect(10, 310, 151, 17))
        self.no_resize_buffer_checkBox.setStyleSheet("background-color: transparent;")
        self.no_resize_buffer_checkBox.setObjectName("no_resize_buffer_checkBox")
        self.playlist_random_checkBox = QtWidgets.QCheckBox(self.download_tab)
        self.playlist_random_checkBox.setGeometry(QtCore.QRect(10, 330, 151, 17))
        self.playlist_random_checkBox.setStyleSheet("background-color: transparent;")
        self.playlist_random_checkBox.setObjectName("playlist_random_checkBox")
        self.no_use_mpegts_checkBox = QtWidgets.QCheckBox(self.download_tab)
        self.no_use_mpegts_checkBox.setGeometry(QtCore.QRect(190, 330, 201, 17))
        self.no_use_mpegts_checkBox.setStyleSheet("background-color: transparent;")
        self.no_use_mpegts_checkBox.setObjectName("no_use_mpegts_checkBox")
        self.lazy_playlist_checkBox = QtWidgets.QCheckBox(self.download_tab)
        self.lazy_playlist_checkBox.setGeometry(QtCore.QRect(190, 290, 201, 17))
        self.lazy_playlist_checkBox.setStyleSheet("background-color: transparent;")
        self.lazy_playlist_checkBox.setObjectName("lazy_playlist_checkBox")
        self.use_mpegts_checkBox = QtWidgets.QCheckBox(self.download_tab)
        self.use_mpegts_checkBox.setGeometry(QtCore.QRect(190, 310, 201, 17))
        self.use_mpegts_checkBox.setStyleSheet("background-color: transparent;")
        self.use_mpegts_checkBox.setObjectName("use_mpegts_checkBox")
        self.buffer_size_input = QtWidgets.QLineEdit(self.download_tab)
        self.buffer_size_input.setGeometry(QtCore.QRect(110, 190, 281, 20))
        self.buffer_size_input.setStyleSheet("background-color: rgb(220, 220, 220);")
        self.buffer_size_input.setObjectName("buffer_size_input")
        self.buffer_size_label = QtWidgets.QLabel(self.download_tab)
        self.buffer_size_label.setGeometry(QtCore.QRect(10, 190, 101, 16))
        self.buffer_size_label.setStyleSheet("background-color: transparent;")
        self.buffer_size_label.setObjectName("buffer_size_label")
        self.download_sections_label = QtWidgets.QLabel(self.download_tab)
        self.download_sections_label.setGeometry(QtCore.QRect(10, 220, 101, 16))
        self.download_sections_label.setStyleSheet("background-color: transparent;")
        self.download_sections_label.setObjectName("download_sections_label")
        self.download_sections_input = QtWidgets.QLineEdit(self.download_tab)
        self.download_sections_input.setGeometry(QtCore.QRect(110, 220, 281, 20))
        self.download_sections_input.setStyleSheet("background-color: rgb(220, 220, 220);")
        self.download_sections_input.setObjectName("download_sections_input")
        self.abort_on_unavailable_fragments_checkBox = QtWidgets.QCheckBox(self.download_tab)
        self.abort_on_unavailable_fragments_checkBox.setGeometry(QtCore.QRect(190, 270, 171, 17))
        self.abort_on_unavailable_fragments_checkBox.setStyleSheet("background-color: transparent;")
        self.abort_on_unavailable_fragments_checkBox.setObjectName("abort_on_unavailable_fragments_checkBox")
        self.http_chunk_size_label = QtWidgets.QLabel(self.download_tab)
        self.http_chunk_size_label.setGeometry(QtCore.QRect(10, 250, 101, 16))
        self.http_chunk_size_label.setStyleSheet("background-color: transparent;")
        self.http_chunk_size_label.setObjectName("http_chunk_size_label")
        self.http_chunk_size_input = QtWidgets.QLineEdit(self.download_tab)
        self.http_chunk_size_input.setGeometry(QtCore.QRect(110, 250, 281, 20))
        self.http_chunk_size_input.setStyleSheet("background-color: rgb(220, 220, 220);")
        self.http_chunk_size_input.setObjectName("http_chunk_size_input")
        self.options_box.addTab(self.download_tab, "")
        self.utilities_tab = QtWidgets.QWidget()
        self.utilities_tab.setObjectName("utilities_tab")
        self.check_filetypes_button = QtWidgets.QPushButton(self.utilities_tab)
        self.check_filetypes_button.setGeometry(QtCore.QRect(10, 10, 91, 21))
        self.check_filetypes_button.setStyleSheet("background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:0 rgba(0, 0, 0, 255), stop:1 rgba(255, 255, 255, 255));\n"
"background-color: rgb(190, 190, 190);")
        self.check_filetypes_button.setObjectName("check_filetypes_button")
        self.restart_button = QtWidgets.QPushButton(self.utilities_tab)
        self.restart_button.setGeometry(QtCore.QRect(10, 300, 91, 31))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.restart_button.setFont(font)
        self.restart_button.setStyleSheet("background-color: rgb(255, 0, 0);\n"
"selection-color: rgb(255, 255, 255);\n"
"selection-background-color: rgb(255, 255, 0);")
        self.restart_button.setObjectName("restart_button")
        self.save_urls_button = QtWidgets.QPushButton(self.utilities_tab)
        self.save_urls_button.setGeometry(QtCore.QRect(10, 40, 75, 21))
        self.save_urls_button.setStyleSheet("background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:0 rgba(0, 0, 0, 255), stop:1 rgba(255, 255, 255, 255));\n"
"background-color: rgb(190, 190, 190);")
        self.save_urls_button.setObjectName("save_urls_button")
        self.load_urls_button = QtWidgets.QPushButton(self.utilities_tab)
        self.load_urls_button.setGeometry(QtCore.QRect(10, 70, 75, 21))
        self.load_urls_button.setStyleSheet("background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:0 rgba(0, 0, 0, 255), stop:1 rgba(255, 255, 255, 255));\n"
"background-color: rgb(190, 190, 190);")
        self.load_urls_button.setObjectName("load_urls_button")
        self.add_config_file_button_2 = QtWidgets.QPushButton(self.utilities_tab)
        self.add_config_file_button_2.setGeometry(QtCore.QRect(210, 10, 101, 41))
        self.add_config_file_button_2.setStyleSheet("background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:0 rgba(0, 0, 0, 255), stop:1 rgba(255, 255, 255, 255));\n"
"background-color: rgb(190, 190, 190);")
        self.add_config_file_button_2.setObjectName("add_config_file_button_2")
        self.config_label = QtWidgets.QLabel(self.utilities_tab)
        self.config_label.setGeometry(QtCore.QRect(110, 60, 211, 21))
        self.config_label.setStyleSheet("background-color: transparent;\n"
"color: rgb(255, 255, 255);")
        self.config_label.setObjectName("config_label")
        self.test_button = QtWidgets.QPushButton(self.utilities_tab)
        self.test_button.setGeometry(QtCore.QRect(10, 120, 75, 23))
        self.test_button.setStyleSheet("background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:0 rgba(0, 0, 0, 255), stop:1 rgba(255, 255, 255, 255));\n"
"background-color: rgb(190, 190, 190);")
        self.test_button.setObjectName("test_button")
        self.options_box.addTab(self.utilities_tab, "")
        self.OptionsBoxPage5 = QtWidgets.QWidget()
        self.OptionsBoxPage5.setObjectName("OptionsBoxPage5")
        self.options_box.addTab(self.OptionsBoxPage5, "")
        self.gridLayout.addWidget(self.options_box, 7, 0, 5, 1)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 874, 21))
        self.menubar.setObjectName("menubar")
        self.menuHelp = QtWidgets.QMenu(self.menubar)
        self.menuHelp.setObjectName("menuHelp")
        self.menuOptions = QtWidgets.QMenu(self.menubar)
        self.menuOptions.setObjectName("menuOptions")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.menubar.addAction(self.menuHelp.menuAction())
        self.menubar.addAction(self.menuOptions.menuAction())

        self.retranslateUi(MainWindow)
        self.options_box.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Youtube Downloader"))
        self.audio_only_checkbox.setText(_translate("MainWindow", "AUDIO ONLY"))
        self.audio_quality_label.setText(_translate("MainWindow", "Audio Quality (Left = Better)"))
        self.filetype_label.setText(_translate("MainWindow", "Please Select a Filetype:"))
        self.input_url_label.setText(_translate("MainWindow", "Input URL\'s separated by a comma:"))
        self.folder_path_input.setText(_translate("MainWindow", "Please Select a Folder:"))
        self.browse_folder_button.setText(_translate("MainWindow", "Browse for Download Folder"))
        self.filetype_dropdown.setCurrentText(_translate("MainWindow", "BEST"))
        self.filetype_dropdown.setItemText(0, _translate("MainWindow", "BEST"))
        self.filetype_dropdown.setItemText(1, _translate("MainWindow", "mp4"))
        self.filetype_dropdown.setItemText(2, _translate("MainWindow", "flv"))
        self.filetype_dropdown.setItemText(3, _translate("MainWindow", "ogg"))
        self.filetype_dropdown.setItemText(4, _translate("MainWindow", "webm"))
        self.filetype_dropdown.setItemText(5, _translate("MainWindow", "3gp"))
        self.download_button.setText(_translate("MainWindow", "Download"))
        self.update_checkBox.setToolTip(_translate("MainWindow", "<html><head/><body><pre style=\" margin-top:0px; margin-bottom:16px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:145%;\"><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#c9d1d9; background-color:transparent;\">Update this program to latest version</span></pre></body></html>"))
        self.update_checkBox.setWhatsThis(_translate("MainWindow", "<html><head/><body><pre style=\" margin-top:0px; margin-bottom:16px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:145%;\"><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#c9d1d9; background-color:transparent;\">Update this program to latest version</span></pre></body></html>"))
        self.update_checkBox.setText(_translate("MainWindow", "Update"))
        self.stop_on_error_checkBox.setToolTip(_translate("MainWindow", "<html><head/><body><pre style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:145%;\"><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#c9d1d9; background-color:transparent;\">Abort downloading of further videos if an error occurs (Alias: --no-ignore-errors)</span></pre></body></html>"))
        self.stop_on_error_checkBox.setWhatsThis(_translate("MainWindow", "<html><head/><body><p><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#c9d1d9; background-color:transparent;\">Abort downloading of further videos if an error occurs (Alias: --no-ignore-errors)</span></p></body></html>"))
        self.stop_on_error_checkBox.setText(_translate("MainWindow", "STOP in case of error"))
        self.force_generic_extractor_checkBox.setToolTip(_translate("MainWindow", "<html><head/><body><pre style=\" margin-top:0px; margin-bottom:16px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:145%;\"><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#c9d1d9; background-color:transparent;\">Force extraction to use the generic extractor</span></pre></body></html>"))
        self.force_generic_extractor_checkBox.setWhatsThis(_translate("MainWindow", "<html><head/><body><pre style=\" margin-top:0px; margin-bottom:16px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:145%;\"><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#c9d1d9; background-color:transparent;\">Force extraction to use the generic extractor</span></pre></body></html>"))
        self.force_generic_extractor_checkBox.setText(_translate("MainWindow", "Force Generic Extractor"))
        self.ignore_config_except_default_checkBox.setToolTip(_translate("MainWindow", "<html><head/><body><p><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#c9d1d9; background-color:transparent;\">Don\'t load any more configuration files except those given by --config-locations. For backward compatibility, if this option is found inside the system configuration file, the user configuration is not loaded. (Alias: --no-config)</span></p></body></html>"))
        self.ignore_config_except_default_checkBox.setWhatsThis(_translate("MainWindow", "<html><head/><body><p><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#c9d1d9; background-color:transparent;\">Don\'t load any more configuration files except those given by --config-locations. For backward compatibility, if this option is found inside the system configuration file, the user configuration is not loaded. (Alias: --no-config)</span></p></body></html>"))
        self.ignore_config_except_default_checkBox.setText(_translate("MainWindow", "Ignore Config Files except default"))
        self.ignore_all_config_files_checkBox.setToolTip(_translate("MainWindow", "<html><head/><body><p><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#c9d1d9; background-color:transparent;\">Do not load any custom configuration files (default). When given inside a configuration file, ignore all previous --config-locations defined in the current file</span></p></body></html>"))
        self.ignore_all_config_files_checkBox.setWhatsThis(_translate("MainWindow", "<html><head/><body><p><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#c9d1d9; background-color:transparent;\">Do not load any custom configuration files (default). When given inside a configuration file, ignore all previous --config-locations defined in the current file</span></p></body></html>"))
        self.ignore_all_config_files_checkBox.setText(_translate("MainWindow", "Ignore ALL config files"))
        self.list_playlist_contents_only_checkBox.setText(_translate("MainWindow", "List playlist contents ONLY (no dl)"))
        self.livestreams_from_start_checkBox.setText(_translate("MainWindow", "Download Livestreams from start"))
        self.wait_for_streams_checkBox.setText(_translate("MainWindow", "Wait for Scheduled streams"))
        self.mark_video_watched_checkBox.setText(_translate("MainWindow", "Mark Video Watched"))
        self.color_codes_checkBox.setText(_translate("MainWindow", "Do not output color codes"))
        self.options_box.setTabText(self.options_box.indexOf(self.general_tab), _translate("MainWindow", "General"))
        self.proxy_url_input.setToolTip(_translate("MainWindow", "<html><head/><body><pre style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:145%;\"><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#c9d1d9; background-color:transparent;\">Use the specified HTTP/HTTPS/SOCKS proxy. To</span></pre><pre style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:145%;\"><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#c9d1d9; background-color:transparent;\">                                enable SOCKS proxy, specify a proper scheme.</span></pre><pre style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:145%;\"><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#c9d1d9; background-color:transparent;\">                                Eg: socks5://user:pass@127.0.0.1:1080/. Pass</span></pre><pre style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:145%;\"><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#c9d1d9; background-color:transparent;\">                                in an empty string (--proxy &quot;&quot;) for direct</span></pre><pre style=\" margin-top:0px; margin-bottom:16px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:145%;\"><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#c9d1d9; background-color:transparent;\">                                connection</span></pre></body></html>"))
        self.proxy_url_input.setWhatsThis(_translate("MainWindow", "<html><head/><body><pre style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:145%;\"><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#c9d1d9; background-color:transparent;\">Use the specified HTTP/HTTPS/SOCKS proxy. To</span></pre><pre style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:145%;\"><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#c9d1d9; background-color:transparent;\">                                enable SOCKS proxy, specify a proper scheme.</span></pre><pre style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:145%;\"><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#c9d1d9; background-color:transparent;\">                                Eg: socks5://user:pass@127.0.0.1:1080/. Pass</span></pre><pre style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:145%;\"><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#c9d1d9; background-color:transparent;\">                                in an empty string (--proxy &quot;&quot;) for direct</span></pre><pre style=\" margin-top:0px; margin-bottom:16px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:145%;\"><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#c9d1d9; background-color:transparent;\">                                connection</span></pre></body></html>"))
        self.proxy_url_input.setPlaceholderText(_translate("MainWindow", "Enter proxy URL here"))
        self.timeout_seconds_input.setToolTip(_translate("MainWindow", "<html><head/><body><pre style=\" margin-top:0px; margin-bottom:16px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:145%;\"><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#c9d1d9; background-color:transparent;\">Time to wait before giving up, in seconds</span></pre></body></html>"))
        self.timeout_seconds_input.setWhatsThis(_translate("MainWindow", "<html><head/><body><pre style=\" margin-top:0px; margin-bottom:16px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:145%;\"><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#c9d1d9; background-color:transparent;\">Time to wait before giving up, in seconds</span></pre></body></html>"))
        self.timeout_seconds_input.setPlaceholderText(_translate("MainWindow", "Time to wait before giving up, in seconds"))
        self.timeout_seconds_label.setToolTip(_translate("MainWindow", "<html><head/><body><pre style=\" margin-top:0px; margin-bottom:16px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:145%;\"><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#c9d1d9; background-color:transparent;\">Time to wait before giving up, in seconds</span></pre></body></html>"))
        self.timeout_seconds_label.setWhatsThis(_translate("MainWindow", "<html><head/><body><pre style=\" margin-top:0px; margin-bottom:16px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:145%;\"><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#c9d1d9; background-color:transparent;\">Time to wait before giving up, in seconds</span></pre></body></html>"))
        self.timeout_seconds_label.setText(_translate("MainWindow", "Timeout Seconds"))
        self.ip_label.setToolTip(_translate("MainWindow", "<html><head/><body><pre style=\" margin-top:0px; margin-bottom:16px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:145%;\"><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#c9d1d9; background-color:transparent;\">Client-side IP address to bind to</span></pre></body></html>"))
        self.ip_label.setWhatsThis(_translate("MainWindow", "<html><head/><body><pre style=\" margin-top:0px; margin-bottom:16px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:145%;\"><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#c9d1d9; background-color:transparent;\">Client-side IP address to bind to</span></pre></body></html>"))
        self.ip_label.setText(_translate("MainWindow", "IP"))
        self.ip_input.setToolTip(_translate("MainWindow", "<html><head/><body><pre style=\" margin-top:0px; margin-bottom:16px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:145%;\"><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#c9d1d9; background-color:transparent;\">Client-side IP address to bind to</span></pre></body></html>"))
        self.ip_input.setWhatsThis(_translate("MainWindow", "<html><head/><body><pre style=\" margin-top:0px; margin-bottom:16px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:145%;\"><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#c9d1d9; background-color:transparent;\">Client-side IP address to bind to</span></pre></body></html>"))
        self.ip_input.setPlaceholderText(_translate("MainWindow", "Client-side IP address to bind to"))
        self.force_ipv4_checkBox.setToolTip(_translate("MainWindow", "<html><head/><body><pre style=\" margin-top:0px; margin-bottom:16px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:145%;\"><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#c9d1d9; background-color:transparent;\">Make all connections via IPv4</span></pre></body></html>"))
        self.force_ipv4_checkBox.setWhatsThis(_translate("MainWindow", "<html><head/><body><pre style=\" margin-top:0px; margin-bottom:16px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:145%;\"><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#c9d1d9; background-color:transparent;\">Make all connections via IPv4</span></pre></body></html>"))
        self.force_ipv4_checkBox.setText(_translate("MainWindow", "Force IPv4"))
        self.force_ipv6_checkBox.setToolTip(_translate("MainWindow", "<html><head/><body><pre style=\" margin-top:0px; margin-bottom:16px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:145%;\"><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#c9d1d9; background-color:transparent;\">Make all connections via IPv6</span></pre></body></html>"))
        self.force_ipv6_checkBox.setWhatsThis(_translate("MainWindow", "<html><head/><body><pre style=\" margin-top:0px; margin-bottom:16px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:145%;\"><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#c9d1d9; background-color:transparent;\">Make all connections via IPv6</span></pre></body></html>"))
        self.force_ipv6_checkBox.setText(_translate("MainWindow", "Force IPv6"))
        self.geo_veri_proxy_url_input.setPlaceholderText(_translate("MainWindow", "Use this proxy to verify the IP address for some geo-restricted sites."))
        self.geo_veri_proxy_url_label.setText(_translate("MainWindow", "Geo Verification Proxy URL"))
        self.geo_bypass_checkBox.setToolTip(_translate("MainWindow", "<html><head/><body><pre style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:145%;\"><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#c9d1d9; background-color:transparent;\">Bypass geographic restriction via faking X-Forwarded-For HTTP header (default)</span></pre></body></html>"))
        self.geo_bypass_checkBox.setWhatsThis(_translate("MainWindow", "<html><head/><body><pre style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:145%;\"><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#c9d1d9; background-color:transparent;\">Bypass geographic restriction via faking X-Forwarded-For HTTP header (default)</span></pre></body></html>"))
        self.geo_bypass_checkBox.setText(_translate("MainWindow", "Geo Bypass"))
        self.geo_bypass_country_code_input.setPlaceholderText(_translate("MainWindow", "Two-letter ISO 3166-2 country code"))
        self.geo_bypass_country_code_label.setToolTip(_translate("MainWindow", "<html><head/><body><pre style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:145%;\"><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#c9d1d9; background-color:transparent;\">Force bypass geographic restriction with explicitly provided two-letter ISO 3166-2 country code</span></pre></body></html>"))
        self.geo_bypass_country_code_label.setWhatsThis(_translate("MainWindow", "<html><head/><body><p><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#c9d1d9; background-color:transparent;\">Force bypass geographic restriction with explicitly provided two-letter ISO 3166-2 country code</span></p></body></html>"))
        self.geo_bypass_country_code_label.setText(_translate("MainWindow", "Geo Bypass Country Code"))
        self.geo_bypass_ip_block_input.setPlaceholderText(_translate("MainWindow", "IP block in CIDR notation"))
        self.geo_bypass_ip_block_label.setToolTip(_translate("MainWindow", "<html><head/><body><pre style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:145%;\"><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#c9d1d9; background-color:transparent;\">Force bypass geographic restriction with explicitly provided IP block in CIDR notation</span></pre></body></html>"))
        self.geo_bypass_ip_block_label.setWhatsThis(_translate("MainWindow", "<html><head/><body><p><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#c9d1d9; background-color:transparent;\">Force bypass geographic restriction with explicitly provided IP block in CIDR notation</span></p></body></html>"))
        self.geo_bypass_ip_block_label.setText(_translate("MainWindow", "Geo Bypass IP Block"))
        self.proxy_label.setToolTip(_translate("MainWindow", "<html><head/><body><pre style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:145%;\"><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#c9d1d9; background-color:transparent;\">Use the specified HTTP/HTTPS/SOCKS proxy. To</span></pre><pre style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:145%;\"><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#c9d1d9; background-color:transparent;\">                                enable SOCKS proxy, specify a proper scheme.</span></pre><pre style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:145%;\"><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#c9d1d9; background-color:transparent;\">                                Eg: socks5://user:pass@127.0.0.1:1080/. Pass</span></pre><pre style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:145%;\"><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#c9d1d9; background-color:transparent;\">                                in an empty string (--proxy &quot;&quot;) for direct</span></pre><pre style=\" margin-top:0px; margin-bottom:16px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:145%;\"><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#c9d1d9; background-color:transparent;\">                                connection</span></pre></body></html>"))
        self.proxy_label.setWhatsThis(_translate("MainWindow", "<html><head/><body><pre style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:145%;\"><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#c9d1d9; background-color:transparent;\">Use the specified HTTP/HTTPS/SOCKS proxy. To</span></pre><pre style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:145%;\"><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#c9d1d9; background-color:transparent;\">                                enable SOCKS proxy, specify a proper scheme.</span></pre><pre style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:145%;\"><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#c9d1d9; background-color:transparent;\">                                Eg: socks5://user:pass@127.0.0.1:1080/. Pass</span></pre><pre style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:145%;\"><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#c9d1d9; background-color:transparent;\">                                in an empty string (--proxy &quot;&quot;) for direct</span></pre><pre style=\" margin-top:0px; margin-bottom:16px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:145%;\"><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#c9d1d9; background-color:transparent;\">                                connection</span></pre></body></html>"))
        self.proxy_label.setText(_translate("MainWindow", "Proxy"))
        self.options_box.setTabText(self.options_box.indexOf(self.net_geo_tab), _translate("MainWindow", "Net/Geo"))
        self.playlist_items_input.setToolTip(_translate("MainWindow", "<html><head/><body><pre style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:145%;\"><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#c9d1d9; background-color:transparent;\">Comma separated playlist_index of the videos</span></pre><pre style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:145%;\"><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#c9d1d9; background-color:transparent;\">                                to download. You can specify a range using</span></pre><pre style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:145%;\"><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#c9d1d9; background-color:transparent;\">                                &quot;[START]:[STOP][:STEP]&quot;. For backward</span></pre><pre style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:145%;\"><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#c9d1d9; background-color:transparent;\">                                compatibility, START-STOP is also supported.</span></pre><pre style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:145%;\"><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#c9d1d9; background-color:transparent;\">                                Use negative indices to count from the right</span></pre><pre style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:145%;\"><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#c9d1d9; background-color:transparent;\">                                and negative STEP to download in reverse</span></pre><pre style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:145%;\"><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#c9d1d9; background-color:transparent;\">                                order. Eg: &quot;-I 1:3,7,-5::2&quot; used on a</span></pre><pre style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:145%;\"><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#c9d1d9; background-color:transparent;\">                                playlist of size 15 will download the videos</span></pre><pre style=\" margin-top:0px; margin-bottom:16px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:145%;\"><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#c9d1d9; background-color:transparent;\">                                at index 1,2,3,7,11,13,15</span></pre></body></html>"))
        self.playlist_items_input.setWhatsThis(_translate("MainWindow", "<html><head/><body><pre style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:145%;\"><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#c9d1d9; background-color:transparent;\">Comma separated playlist_index of the videos</span></pre><pre style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:145%;\"><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#c9d1d9; background-color:transparent;\">                                to download. You can specify a range using</span></pre><pre style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:145%;\"><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#c9d1d9; background-color:transparent;\">                                &quot;[START]:[STOP][:STEP]&quot;. For backward</span></pre><pre style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:145%;\"><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#c9d1d9; background-color:transparent;\">                                compatibility, START-STOP is also supported.</span></pre><pre style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:145%;\"><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#c9d1d9; background-color:transparent;\">                                Use negative indices to count from the right</span></pre><pre style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:145%;\"><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#c9d1d9; background-color:transparent;\">                                and negative STEP to download in reverse</span></pre><pre style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:145%;\"><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#c9d1d9; background-color:transparent;\">                                order. Eg: &quot;-I 1:3,7,-5::2&quot; used on a</span></pre><pre style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:145%;\"><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#c9d1d9; background-color:transparent;\">                                playlist of size 15 will download the videos</span></pre><pre style=\" margin-top:0px; margin-bottom:16px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:145%;\"><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#c9d1d9; background-color:transparent;\">                                at index 1,2,3,7,11,13,15</span></pre></body></html>"))
        self.playlist_items_label.setToolTip(_translate("MainWindow", "<html><head/><body><p><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#c9d1d9; background-color:transparent;\">Comma separated playlist_index of the videos to download. You can specify a range using &quot;[START]:[STOP][:STEP]&quot;. For backward compatibility, START-STOP is also supported. Use negative indices to count from the right and negative STEP to download in reverse order. Eg: &quot;-I 1:3,7,-5::2&quot; used on a playlist of size 15 will download the videos at index 1,2,3,7,11,13,15</span></p></body></html>"))
        self.playlist_items_label.setWhatsThis(_translate("MainWindow", "<html><head/><body><p><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#c9d1d9; background-color:transparent;\">Comma separated playlist_index of the videos to download. You can specify a range using &quot;[START]:[STOP][:STEP]&quot;. For backward compatibility, START-STOP is also supported. Use negative indices to count from the right and negative STEP to download in reverse order. Eg: &quot;-I 1:3,7,-5::2&quot; used on a playlist of size 15 will download the videos at index 1,2,3,7,11,13,15</span></p></body></html>"))
        self.playlist_items_label.setText(_translate("MainWindow", "Playlist Items"))
        self.minimum_filesize_label.setToolTip(_translate("MainWindow", "<html><head/><body><pre style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:145%;\"><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#c9d1d9; background-color:transparent;\">Do not download any videos smaller than SIZE (e.g. 50k or 44.6m)</span></pre></body></html>"))
        self.minimum_filesize_label.setWhatsThis(_translate("MainWindow", "<html><head/><body><p><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#c9d1d9; background-color:transparent;\">Do not download any videos smaller than SIZE (e.g. 50k or 44.6m)</span></p></body></html>"))
        self.minimum_filesize_label.setText(_translate("MainWindow", "Minimum Filesize"))
        self.maximum_filesize_label.setToolTip(_translate("MainWindow", "<html><head/><body><pre style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:145%;\"><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#c9d1d9; background-color:transparent;\">Do not download any videos larger than SIZE (e.g. 50k or 44.6m)</span></pre></body></html>"))
        self.maximum_filesize_label.setWhatsThis(_translate("MainWindow", "<html><head/><body><pre style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:145%;\"><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#c9d1d9; background-color:transparent;\">Do not download any videos larger than SIZE (e.g. 50k or 44.6m)</span></pre></body></html>"))
        self.maximum_filesize_label.setText(_translate("MainWindow", "Maximum Filesize"))
        self.specific_date_label.setToolTip(_translate("MainWindow", "<html><head/><body><p><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#c9d1d9; background-color:transparent;\">Download only videos uploaded on this date. The date can be &quot;YYYYMMDD&quot; or in the format  [now|today|yesterday][-N[day|week|month|year]]. Eg: --date today-2weeks</span></p></body></html>"))
        self.specific_date_label.setWhatsThis(_translate("MainWindow", "<html><head/><body><p><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#c9d1d9; background-color:transparent;\">Download only videos uploaded on this date. The date can be &quot;YYYYMMDD&quot; or in the format  [now|today|yesterday][-N[day|week|month|year]]. Eg: --date today-2weeks</span></p></body></html>"))
        self.specific_date_label.setText(_translate("MainWindow", "Specific Date "))
        self.before_date_label.setToolTip(_translate("MainWindow", "<html><head/><body><p><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#c9d1d9; background-color:transparent;\">Download only videos uploaded on or before this date. The date formats accepted is the same as &quot;Specific Date&quot;</span></p></body></html>"))
        self.before_date_label.setWhatsThis(_translate("MainWindow", "<html><head/><body><p><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#c9d1d9; background-color:transparent;\">Download only videos uploaded on or before this date. The date formats accepted is the same as &quot;Specific Date&quot;</span></p></body></html>"))
        self.before_date_label.setText(_translate("MainWindow", "Before Date"))
        self.after_date_label.setToolTip(_translate("MainWindow", "<html><head/><body><p><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#c9d1d9; background-color:transparent;\">Download only videos uploaded on or after this date. The date formats accepted is the same as &quot;Specific Date&quot;</span></p></body></html>"))
        self.after_date_label.setWhatsThis(_translate("MainWindow", "<html><head/><body><p><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#c9d1d9; background-color:transparent;\">Download only videos uploaded on or after this date. The date formats accepted is the same as &quot;Specific Date&quot;</span></p></body></html>"))
        self.after_date_label.setText(_translate("MainWindow", "After Date"))
        self.filters_label.setToolTip(_translate("MainWindow", "<html><head/><body><pre style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:145%;\"><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#c9d1d9; background-color:transparent;\">Generic video filter. Any &quot;OUTPUT TEMPLATE&quot;</span></pre><pre style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:145%;\"><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#c9d1d9; background-color:transparent;\">                                field can be compared with a number or a</span></pre><pre style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:145%;\"><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#c9d1d9; background-color:transparent;\">                                string using the operators defined in</span></pre><pre style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:145%;\"><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#c9d1d9; background-color:transparent;\">                                &quot;Filtering formats&quot;. You can also simply</span></pre><pre style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:145%;\"><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#c9d1d9; background-color:transparent;\">                                specify a field to match if the field is</span></pre><pre style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:145%;\"><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#c9d1d9; background-color:transparent;\">                                present, use &quot;!field&quot; to check if the field</span></pre><pre style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:145%;\"><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#c9d1d9; background-color:transparent;\">                                is not present, and &quot;&amp;&quot; to check multiple</span></pre><pre style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:145%;\"><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#c9d1d9; background-color:transparent;\">                                conditions. Use a &quot;\\&quot; to escape &quot;&amp;&quot; or</span></pre><pre style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:145%;\"><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#c9d1d9; background-color:transparent;\">                                quotes if needed. If used multiple times,</span></pre><pre style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:145%;\"><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#c9d1d9; background-color:transparent;\">                                the filter matches if atleast one of the</span></pre><pre style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:145%;\"><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#c9d1d9; background-color:transparent;\">                                conditions are met. Eg: --match-filter</span></pre><pre style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:145%;\"><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#c9d1d9; background-color:transparent;\">                                !is_live --match-filter &quot;like_count&gt;?100 &amp;</span></pre><pre style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:145%;\"><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#c9d1d9; background-color:transparent;\">                                description~=\'(?i)\\bcats \\&amp; dogs\\b\'&quot; matches</span></pre><pre style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:145%;\"><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#c9d1d9; background-color:transparent;\">                                only videos that are not live OR those that</span></pre><pre style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:145%;\"><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#c9d1d9; background-color:transparent;\">                                have a like count more than 100 (or the like</span></pre><pre style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:145%;\"><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#c9d1d9; background-color:transparent;\">                                field is not available) and also has a</span></pre><pre style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:145%;\"><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#c9d1d9; background-color:transparent;\">                                description that contains the phrase &quot;cats &amp;</span></pre><pre style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:145%;\"><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#c9d1d9; background-color:transparent;\">                                dogs&quot; (caseless). Use &quot;--match-filter -&quot; to</span></pre><pre style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:145%;\"><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#c9d1d9; background-color:transparent;\">                                interactively ask whether to download each</span></pre><pre style=\" margin-top:0px; margin-bottom:16px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:145%;\"><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#c9d1d9; background-color:transparent;\">                                video</span></pre></body></html>"))
        self.filters_label.setWhatsThis(_translate("MainWindow", "<html><head/><body><p><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#c9d1d9; background-color:transparent;\">Generic video filter. Any &quot;OUTPUT TEMPLATE&quot;</span></p><pre style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:145%;\"><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#c9d1d9; background-color:transparent;\">                                field can be compared with a number or a</span></pre><pre style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:145%;\"><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#c9d1d9; background-color:transparent;\">                                string using the operators defined in</span></pre><pre style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:145%;\"><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#c9d1d9; background-color:transparent;\">                                &quot;Filtering formats&quot;. You can also simply</span></pre><pre style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:145%;\"><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#c9d1d9; background-color:transparent;\">                                specify a field to match if the field is</span></pre><pre style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:145%;\"><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#c9d1d9; background-color:transparent;\">                                present, use &quot;!field&quot; to check if the field</span></pre><pre style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:145%;\"><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#c9d1d9; background-color:transparent;\">                                is not present, and &quot;&amp;&quot; to check multiple</span></pre><pre style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:145%;\"><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#c9d1d9; background-color:transparent;\">                                conditions. Use a &quot;\\&quot; to escape &quot;&amp;&quot; or</span></pre><pre style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:145%;\"><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#c9d1d9; background-color:transparent;\">                                quotes if needed. If used multiple times,</span></pre><pre style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:145%;\"><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#c9d1d9; background-color:transparent;\">                                the filter matches if atleast one of the</span></pre><pre style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:145%;\"><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#c9d1d9; background-color:transparent;\">                                conditions are met. Eg: --match-filter</span></pre><pre style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:145%;\"><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#c9d1d9; background-color:transparent;\">                                !is_live --match-filter &quot;like_count&gt;?100 &amp;</span></pre><pre style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:145%;\"><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#c9d1d9; background-color:transparent;\">                                description~=\'(?i)\\bcats \\&amp; dogs\\b\'&quot; matches</span></pre><pre style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:145%;\"><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#c9d1d9; background-color:transparent;\">                                only videos that are not live OR those that</span></pre><pre style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:145%;\"><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#c9d1d9; background-color:transparent;\">                                have a like count more than 100 (or the like</span></pre><pre style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:145%;\"><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#c9d1d9; background-color:transparent;\">                                field is not available) and also has a</span></pre><pre style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:145%;\"><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#c9d1d9; background-color:transparent;\">                                description that contains the phrase &quot;cats &amp;</span></pre><pre style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:145%;\"><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#c9d1d9; background-color:transparent;\">                                dogs&quot; (caseless). Use &quot;--match-filter -&quot; to</span></pre><pre style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:145%;\"><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#c9d1d9; background-color:transparent;\">                                interactively ask whether to download each</span></pre><pre style=\" margin-top:0px; margin-bottom:16px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:145%;\"><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#c9d1d9; background-color:transparent;\">                                video</span></pre></body></html>"))
        self.filters_label.setText(_translate("MainWindow", "Filters"))
        self.download_playlist_checkBox.setToolTip(_translate("MainWindow", "<html><head/><body><pre style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:145%;\"><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#c9d1d9; background-color:transparent;\">Download the playlist, if the URL refers to a video and a playlist</span></pre></body></html>"))
        self.download_playlist_checkBox.setWhatsThis(_translate("MainWindow", "<html><head/><body><pre style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:145%;\"><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#c9d1d9; background-color:transparent;\">Download the playlist, if the URL refers to a video and a playlist</span></pre></body></html>"))
        self.download_playlist_checkBox.setText(_translate("MainWindow", "Download Playlist"))
        self.age_limit_label.setToolTip(_translate("MainWindow", "<html><head/><body><pre style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:145%;\"><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#c9d1d9; background-color:transparent;\">Download only videos suitable for the given age</span></pre></body></html>"))
        self.age_limit_label.setWhatsThis(_translate("MainWindow", "<html><head/><body><p><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#c9d1d9; background-color:transparent;\">Download only videos suitable for the given age</span></p></body></html>"))
        self.age_limit_label.setText(_translate("MainWindow", "Age Limit"))
        self.options_box.setTabText(self.options_box.indexOf(self.video_tab), _translate("MainWindow", "Video"))
        self.max_download_rate_input.setPlaceholderText(_translate("MainWindow", "Max DL rate in bytes per second (e.g. 50K or 4.2M)"))
        self.max_download_rate_label.setToolTip(_translate("MainWindow", "<html><head/><body><pre style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:145%;\"><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#c9d1d9; background-color:transparent;\">Maximum download rate in bytes per second (e.g. 50K or 4.2M)</span></pre></body></html>"))
        self.max_download_rate_label.setWhatsThis(_translate("MainWindow", "<html><head/><body><p><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#c9d1d9; background-color:transparent;\">Maximum download rate in bytes per second (e.g. 50K or 4.2M)</span></p></body></html>"))
        self.max_download_rate_label.setText(_translate("MainWindow", "Max Download Rate"))
        self.retries_label.setToolTip(_translate("MainWindow", "<html><head/><body><pre style=\" margin-top:0px; margin-bottom:16px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:145%;\"><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#c9d1d9; background-color:transparent;\">Number of retries (default is 10), or &quot;infinite&quot;</span></pre></body></html>"))
        self.retries_label.setWhatsThis(_translate("MainWindow", "<html><head/><body><p><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#c9d1d9; background-color:transparent;\">Number of retries (default is 10), or &quot;infinite&quot;</span></p></body></html>"))
        self.retries_label.setText(_translate("MainWindow", "Retries"))
        self.retries_input.setPlaceholderText(_translate("MainWindow", "Number of retries (default is 10), or \"infinite\""))
        self.file_access_retries_label.setToolTip(_translate("MainWindow", "<html><head/><body><p><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#c9d1d9; background-color:transparent;\">Comma separated playlist_index of the videos to download. You can specify a range using &quot;[START]:[STOP][:STEP]&quot;. For backward compatibility, START-STOP is also supported. Use negative indices to count from the right and negative STEP to download in reverse order. Eg: &quot;-I 1:3,7,-5::2&quot; used on a playlist of size 15 will download the videos at index 1,2,3,7,11,13,15</span></p></body></html>"))
        self.file_access_retries_label.setWhatsThis(_translate("MainWindow", "<html><head/><body><p><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#c9d1d9; background-color:transparent;\">Comma separated playlist_index of the videos to download. You can specify a range using &quot;[START]:[STOP][:STEP]&quot;. For backward compatibility, START-STOP is also supported. Use negative indices to count from the right and negative STEP to download in reverse order. Eg: &quot;-I 1:3,7,-5::2&quot; used on a playlist of size 15 will download the videos at index 1,2,3,7,11,13,15</span></p></body></html>"))
        self.file_access_retries_label.setText(_translate("MainWindow", "File Access Retries"))
        self.concurrent_frags_input.setToolTip(_translate("MainWindow", "<html><head/><body><pre style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:145%;\"><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#000000; background-color:transparent;\">Number of fragments of a dash/hlsnative</span></pre><pre style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:145%;\"><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#000000; background-color:transparent;\">                                video that should be downloaded concurrently</span></pre><pre style=\" margin-top:0px; margin-bottom:16px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:145%;\"><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#000000; background-color:transparent;\">                                (default is 1)</span></pre></body></html>"))
        self.concurrent_frags_input.setWhatsThis(_translate("MainWindow", "<html><head/><body><pre style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:145%;\"><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#000000; background-color:transparent;\">Number of fragments of a dash/hlsnative</span></pre><pre style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:145%;\"><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#000000; background-color:transparent;\">                                video that should be downloaded concurrently</span></pre><pre style=\" margin-top:0px; margin-bottom:16px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:145%;\"><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#000000; background-color:transparent;\">                                (default is 1)</span></pre></body></html>"))
        self.retry_sleep_label.setToolTip(_translate("MainWindow", "<html><head/><body><pre style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:145%;\"><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#000000; background-color:transparent;\">An expression for the time to sleep between</span></pre><pre style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:145%;\"><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#000000; background-color:transparent;\">                                retries in seconds (optionally) prefixed by</span></pre><pre style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:145%;\"><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#000000; background-color:transparent;\">                                the type of retry (file_access, fragment,</span></pre><pre style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:145%;\"><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#000000; background-color:transparent;\">                                http (default)) to apply the sleep to. EXPR</span></pre><pre style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:145%;\"><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#000000; background-color:transparent;\">                                can be a number, linear=START[:END[:STEP=1]]</span></pre><pre style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:145%;\"><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#000000; background-color:transparent;\">                                or exp=START[:END[:BASE=2]]. This option can</span></pre><pre style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:145%;\"><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#000000; background-color:transparent;\">                                be used multiple times to set the sleep for</span></pre><pre style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:145%;\"><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#000000; background-color:transparent;\">                                the different retry types. Eg: --retry-sleep</span></pre><pre style=\" margin-top:0px; margin-bottom:16px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:145%;\"><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#000000; background-color:transparent;\">                                linear=1::2 --retry-sleep fragment:exp=1:20</span></pre></body></html>"))
        self.retry_sleep_label.setWhatsThis(_translate("MainWindow", "<html><head/><body><pre style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:145%;\"><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#000000; background-color:transparent;\">An expression for the time to sleep between</span></pre><pre style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:145%;\"><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#000000; background-color:transparent;\">                                retries in seconds (optionally) prefixed by</span></pre><pre style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:145%;\"><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#000000; background-color:transparent;\">                                the type of retry (file_access, fragment,</span></pre><pre style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:145%;\"><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#000000; background-color:transparent;\">                                http (default)) to apply the sleep to. EXPR</span></pre><pre style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:145%;\"><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#000000; background-color:transparent;\">                                can be a number, linear=START[:END[:STEP=1]]</span></pre><pre style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:145%;\"><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#000000; background-color:transparent;\">                                or exp=START[:END[:BASE=2]]. This option can</span></pre><pre style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:145%;\"><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#000000; background-color:transparent;\">                                be used multiple times to set the sleep for</span></pre><pre style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:145%;\"><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#000000; background-color:transparent;\">                                the different retry types. Eg: --retry-sleep</span></pre><pre style=\" margin-top:0px; margin-bottom:16px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:145%;\"><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#000000; background-color:transparent;\">                                linear=1::2 --retry-sleep fragment:exp=1:20</span></pre></body></html>"))
        self.retry_sleep_label.setText(_translate("MainWindow", "Retry Sleep"))
        self.fragment_retries_label.setToolTip(_translate("MainWindow", "<html><head/><body><p><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#c9d1d9; background-color:transparent;\">Comma separated playlist_index of the videos to download. You can specify a range using &quot;[START]:[STOP][:STEP]&quot;. For backward compatibility, START-STOP is also supported. Use negative indices to count from the right and negative STEP to download in reverse order. Eg: &quot;-I 1:3,7,-5::2&quot; used on a playlist of size 15 will download the videos at index 1,2,3,7,11,13,15</span></p></body></html>"))
        self.fragment_retries_label.setWhatsThis(_translate("MainWindow", "<html><head/><body><p><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#c9d1d9; background-color:transparent;\">Comma separated playlist_index of the videos to download. You can specify a range using &quot;[START]:[STOP][:STEP]&quot;. For backward compatibility, START-STOP is also supported. Use negative indices to count from the right and negative STEP to download in reverse order. Eg: &quot;-I 1:3,7,-5::2&quot; used on a playlist of size 15 will download the videos at index 1,2,3,7,11,13,15</span></p></body></html>"))
        self.fragment_retries_label.setText(_translate("MainWindow", "Fragment Retries"))
        self.concurrent_frags_label.setToolTip(_translate("MainWindow", "<html><head/><body><pre style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:145%;\"><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#000000; background-color:transparent;\">Number of fragments of a dash/hlsnative</span></pre><pre style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:145%;\"><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#000000; background-color:transparent;\">                                video that should be downloaded concurrently</span></pre><pre style=\" margin-top:0px; margin-bottom:16px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:145%;\"><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#000000; background-color:transparent;\">                                (default is 1)</span></pre></body></html>"))
        self.concurrent_frags_label.setWhatsThis(_translate("MainWindow", "<html><head/><body><pre style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:145%;\"><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#000000; background-color:transparent;\">Number of fragments of a dash/hlsnative</span></pre><pre style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:145%;\"><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#000000; background-color:transparent;\">                                video that should be downloaded concurrently</span></pre><pre style=\" margin-top:0px; margin-bottom:16px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:145%;\"><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#000000; background-color:transparent;\">                                (default is 1)</span></pre></body></html>"))
        self.concurrent_frags_label.setText(_translate("MainWindow", "Concurrent Frags"))
        self.retry_sleep_input.setToolTip(_translate("MainWindow", "<html><head/><body><pre style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:145%;\"><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#c9d1d9; background-color:transparent;\">An expression for the time to sleep between</span></pre><pre style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:145%;\"><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#c9d1d9; background-color:transparent;\">                                retries in seconds (optionally) prefixed by</span></pre><pre style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:145%;\"><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#c9d1d9; background-color:transparent;\">                                the type of retry (file_access, fragment,</span></pre><pre style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:145%;\"><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#c9d1d9; background-color:transparent;\">                                http (default)) to apply the sleep to. EXPR</span></pre><pre style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:145%;\"><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#c9d1d9; background-color:transparent;\">                                can be a number, linear=START[:END[:STEP=1]]</span></pre><pre style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:145%;\"><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#c9d1d9; background-color:transparent;\">                                or exp=START[:END[:BASE=2]]. This option can</span></pre><pre style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:145%;\"><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#c9d1d9; background-color:transparent;\">                                be used multiple times to set the sleep for</span></pre><pre style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:145%;\"><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#c9d1d9; background-color:transparent;\">                                the different retry types. Eg: --retry-sleep</span></pre><pre style=\" margin-top:0px; margin-bottom:16px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:145%;\"><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#c9d1d9; background-color:transparent;\">                                linear=1::2 --retry-sleep fragment:exp=1:20</span></pre></body></html>"))
        self.retry_sleep_input.setWhatsThis(_translate("MainWindow", "<html><head/><body><pre style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:145%;\"><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#c9d1d9; background-color:transparent;\">An expression for the time to sleep between</span></pre><pre style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:145%;\"><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#c9d1d9; background-color:transparent;\">                                retries in seconds (optionally) prefixed by</span></pre><pre style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:145%;\"><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#c9d1d9; background-color:transparent;\">                                the type of retry (file_access, fragment,</span></pre><pre style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:145%;\"><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#c9d1d9; background-color:transparent;\">                                http (default)) to apply the sleep to. EXPR</span></pre><pre style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:145%;\"><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#c9d1d9; background-color:transparent;\">                                can be a number, linear=START[:END[:STEP=1]]</span></pre><pre style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:145%;\"><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#c9d1d9; background-color:transparent;\">                                or exp=START[:END[:BASE=2]]. This option can</span></pre><pre style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:145%;\"><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#c9d1d9; background-color:transparent;\">                                be used multiple times to set the sleep for</span></pre><pre style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:145%;\"><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#c9d1d9; background-color:transparent;\">                                the different retry types. Eg: --retry-sleep</span></pre><pre style=\" margin-top:0px; margin-bottom:16px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:145%;\"><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#c9d1d9; background-color:transparent;\">                                linear=1::2 --retry-sleep fragment:exp=1:20</span></pre></body></html>"))
        self.skip_unavailable_fragments_checkBox.setText(_translate("MainWindow", "Skip Unavailable Fragments"))
        self.keep_fragments_checkBox.setText(_translate("MainWindow", "Keep Fragments"))
        self.no_resize_buffer_checkBox.setText(_translate("MainWindow", "Do Not Resize Buffer"))
        self.playlist_random_checkBox.setText(_translate("MainWindow", "Random Playlist DL order"))
        self.no_use_mpegts_checkBox.setText(_translate("MainWindow", "Do not use mpegts for HLS"))
        self.lazy_playlist_checkBox.setToolTip(_translate("MainWindow", "<html><head/><body><p><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#000000; background-color:transparent;\">Checked: Process entries in the playlist as they are</span></p><p><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#000000; background-color:transparent;\">                                received. This disables n_entries,</span></p><p><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#000000; background-color:transparent;\">                                --playlist-random and --playlist-reverse</span></p><p><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#000000; background-color:transparent;\">Unchecked: </span><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#000000; background-color:transparent;\">Process videos in the playlist only after</span></p><pre style=\" margin-top:0px; margin-bottom:16px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:145%;\"><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#000000; background-color:transparent;\">                                the entire playlist is parsed (default)</span></pre></body></html>"))
        self.lazy_playlist_checkBox.setText(_translate("MainWindow", "Lazy Playlist"))
        self.use_mpegts_checkBox.setText(_translate("MainWindow", "Use mpegts for HLS"))
        self.buffer_size_input.setToolTip(_translate("MainWindow", "<html><head/><body><pre style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:145%;\"><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#000000; background-color:transparent;\">Number of fragments of a dash/hlsnative</span></pre><pre style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:145%;\"><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#000000; background-color:transparent;\">                                video that should be downloaded concurrently</span></pre><pre style=\" margin-top:0px; margin-bottom:16px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:145%;\"><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#000000; background-color:transparent;\">                                (default is 1)</span></pre></body></html>"))
        self.buffer_size_input.setWhatsThis(_translate("MainWindow", "<html><head/><body><pre style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:145%;\"><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#000000; background-color:transparent;\">Number of fragments of a dash/hlsnative</span></pre><pre style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:145%;\"><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#000000; background-color:transparent;\">                                video that should be downloaded concurrently</span></pre><pre style=\" margin-top:0px; margin-bottom:16px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:145%;\"><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#000000; background-color:transparent;\">                                (default is 1)</span></pre></body></html>"))
        self.buffer_size_label.setToolTip(_translate("MainWindow", "<html><head/><body><pre style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:145%;\"><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#000000; background-color:transparent;\">Number of fragments of a dash/hlsnative</span></pre><pre style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:145%;\"><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#000000; background-color:transparent;\">                                video that should be downloaded concurrently</span></pre><pre style=\" margin-top:0px; margin-bottom:16px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:145%;\"><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#000000; background-color:transparent;\">                                (default is 1)</span></pre></body></html>"))
        self.buffer_size_label.setWhatsThis(_translate("MainWindow", "<html><head/><body><pre style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:145%;\"><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#000000; background-color:transparent;\">Number of fragments of a dash/hlsnative</span></pre><pre style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:145%;\"><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#000000; background-color:transparent;\">                                video that should be downloaded concurrently</span></pre><pre style=\" margin-top:0px; margin-bottom:16px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:145%;\"><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#000000; background-color:transparent;\">                                (default is 1)</span></pre></body></html>"))
        self.buffer_size_label.setText(_translate("MainWindow", "Buffer Size"))
        self.download_sections_label.setToolTip(_translate("MainWindow", "<html><head/><body><p><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#000000; background-color:transparent;\">Download only chapters whose title matches</span></p><p><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#000000; background-color:transparent;\">the given regular expression. Time ranges</span></p><p><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#000000; background-color:transparent;\">prefixed by a &quot;*&quot; can also be used in place</span></p><p><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#000000; background-color:transparent;\">of chapters to download the specified range.</span></p><p><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#000000; background-color:transparent;\">Eg: &quot;*10:15-15:00&quot;, &quot;intro&quot;. Needs ffmpeg.</span></p><p><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#000000; background-color:transparent;\">This option can be used multiple times to</span></p><p><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#000000; background-color:transparent;\">download multiple sections, just place a comma</span></p><p><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#000000; background-color:transparent;\">between sections.</span></p></body></html>"))
        self.download_sections_label.setWhatsThis(_translate("MainWindow", "<html><head/><body><p><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#000000; background-color:transparent;\">Download only chapters whose title matches</span></p><p><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#000000; background-color:transparent;\">the given regular expression. Time ranges</span></p><p><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#000000; background-color:transparent;\">prefixed by a &quot;*&quot; can also be used in place</span></p><p><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#000000; background-color:transparent;\">of chapters to download the specified range.</span></p><p><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#000000; background-color:transparent;\">Eg: &quot;*10:15-15:00&quot;, &quot;intro&quot;. Needs ffmpeg.</span></p><p><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#000000; background-color:transparent;\">This option can be used multiple times to</span></p><p><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#000000; background-color:transparent;\">download multiple sections, just place a comma</span></p><p><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#000000; background-color:transparent;\">between sections.</span></p></body></html>"))
        self.download_sections_label.setText(_translate("MainWindow", "Download Sections"))
        self.download_sections_input.setToolTip(_translate("MainWindow", "<html><head/><body><p><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#000000; background-color:transparent;\">Download only chapters whose title matches</span></p><p><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#000000; background-color:transparent;\">the given regular expression. Time ranges</span></p><p><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#000000; background-color:transparent;\">prefixed by a &quot;*&quot; can also be used in place</span></p><p><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#000000; background-color:transparent;\">of chapters to download the specified range.</span></p><p><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#000000; background-color:transparent;\">Eg: &quot;*10:15-15:00&quot;, &quot;intro&quot;. Needs ffmpeg.</span></p><p><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#000000; background-color:transparent;\">This option can be used multiple times to</span></p><p><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#000000; background-color:transparent;\">download multiple sections, just place a comma</span></p><p><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#000000; background-color:transparent;\">between sections.</span></p></body></html>"))
        self.download_sections_input.setWhatsThis(_translate("MainWindow", "<html><head/><body><p><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#000000; background-color:transparent;\">Download only chapters whose title matches</span></p><p><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#000000; background-color:transparent;\">the given regular expression. Time ranges</span></p><p><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#000000; background-color:transparent;\">prefixed by a &quot;*&quot; can also be used in place</span></p><p><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#000000; background-color:transparent;\">of chapters to download the specified range.</span></p><p><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#000000; background-color:transparent;\">Eg: &quot;*10:15-15:00&quot;, &quot;intro&quot;. Needs ffmpeg.</span></p><p><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#000000; background-color:transparent;\">This option can be used multiple times to</span></p><p><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#000000; background-color:transparent;\">download multiple sections, just place a comma</span></p><p><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#000000; background-color:transparent;\">between sections.</span></p></body></html>"))
        self.abort_on_unavailable_fragments_checkBox.setText(_translate("MainWindow", "Stop if Unavailable Fragments"))
        self.http_chunk_size_label.setToolTip(_translate("MainWindow", "<html><head/><body><p><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#000000; background-color:transparent;\">Download only chapters whose title matches</span></p><p><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#000000; background-color:transparent;\">the given regular expression. Time ranges</span></p><p><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#000000; background-color:transparent;\">prefixed by a &quot;*&quot; can also be used in place</span></p><p><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#000000; background-color:transparent;\">of chapters to download the specified range.</span></p><p><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#000000; background-color:transparent;\">Eg: &quot;*10:15-15:00&quot;, &quot;intro&quot;. Needs ffmpeg.</span></p><p><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#000000; background-color:transparent;\">This option can be used multiple times to</span></p><p><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#000000; background-color:transparent;\">download multiple sections, just place a comma</span></p><p><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#000000; background-color:transparent;\">between sections.</span></p></body></html>"))
        self.http_chunk_size_label.setWhatsThis(_translate("MainWindow", "<html><head/><body><p><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#000000; background-color:transparent;\">Download only chapters whose title matches</span></p><p><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#000000; background-color:transparent;\">the given regular expression. Time ranges</span></p><p><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#000000; background-color:transparent;\">prefixed by a &quot;*&quot; can also be used in place</span></p><p><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#000000; background-color:transparent;\">of chapters to download the specified range.</span></p><p><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#000000; background-color:transparent;\">Eg: &quot;*10:15-15:00&quot;, &quot;intro&quot;. Needs ffmpeg.</span></p><p><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#000000; background-color:transparent;\">This option can be used multiple times to</span></p><p><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#000000; background-color:transparent;\">download multiple sections, just place a comma</span></p><p><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#000000; background-color:transparent;\">between sections.</span></p></body></html>"))
        self.http_chunk_size_label.setText(_translate("MainWindow", "HTTP Chunk Size"))
        self.http_chunk_size_input.setToolTip(_translate("MainWindow", "<html><head/><body><p><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#000000; background-color:transparent;\">Download only chapters whose title matches</span></p><p><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#000000; background-color:transparent;\">the given regular expression. Time ranges</span></p><p><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#000000; background-color:transparent;\">prefixed by a &quot;*&quot; can also be used in place</span></p><p><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#000000; background-color:transparent;\">of chapters to download the specified range.</span></p><p><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#000000; background-color:transparent;\">Eg: &quot;*10:15-15:00&quot;, &quot;intro&quot;. Needs ffmpeg.</span></p><p><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#000000; background-color:transparent;\">This option can be used multiple times to</span></p><p><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#000000; background-color:transparent;\">download multiple sections, just place a comma</span></p><p><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#000000; background-color:transparent;\">between sections.</span></p></body></html>"))
        self.http_chunk_size_input.setWhatsThis(_translate("MainWindow", "<html><head/><body><p><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#000000; background-color:transparent;\">Download only chapters whose title matches</span></p><p><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#000000; background-color:transparent;\">the given regular expression. Time ranges</span></p><p><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#000000; background-color:transparent;\">prefixed by a &quot;*&quot; can also be used in place</span></p><p><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#000000; background-color:transparent;\">of chapters to download the specified range.</span></p><p><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#000000; background-color:transparent;\">Eg: &quot;*10:15-15:00&quot;, &quot;intro&quot;. Needs ffmpeg.</span></p><p><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#000000; background-color:transparent;\">This option can be used multiple times to</span></p><p><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#000000; background-color:transparent;\">download multiple sections, just place a comma</span></p><p><span style=\" font-family:\'ui-monospace\',\'SFMono-Regular\',\'SF Mono\',\'Menlo\',\'Consolas\',\'Liberation Mono\',\'monospace\'; color:#000000; background-color:transparent;\">between sections.</span></p></body></html>"))
        self.options_box.setTabText(self.options_box.indexOf(self.download_tab), _translate("MainWindow", "Download"))
        self.check_filetypes_button.setText(_translate("MainWindow", "Check Filetypes"))
        self.restart_button.setText(_translate("MainWindow", "RESTART APP"))
        self.save_urls_button.setText(_translate("MainWindow", "Save URL\'s"))
        self.load_urls_button.setText(_translate("MainWindow", "Load URL\'s"))
        self.add_config_file_button_2.setText(_translate("MainWindow", "Load Config File"))
        self.config_label.setText(_translate("MainWindow", "Config location will be displayed here "))
        self.test_button.setText(_translate("MainWindow", "test_button"))
        self.options_box.setTabText(self.options_box.indexOf(self.utilities_tab), _translate("MainWindow", "Utilities"))
        self.menuHelp.setTitle(_translate("MainWindow", "Help"))
        self.menuOptions.setTitle(_translate("MainWindow", "Options"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
